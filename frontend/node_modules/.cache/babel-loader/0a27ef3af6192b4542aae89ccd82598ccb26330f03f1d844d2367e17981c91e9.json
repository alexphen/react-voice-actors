{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aphen\\\\OneDrive\\\\Documents\\\\GitHub\\\\react-voice-actors\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n// import text from '../data/MasterV3.json'\nimport ShowRoleToggle from \"../components/ShowRoleToggle\";\nimport ls from 'local-storage';\nimport axios from \"axios\";\n// import { getMAL } from \"../../../backend/dbFiles/dbOperation\";\n// require('dotenv').config();\n// console.log('Your environment variable MAL_CLIENT_ID has the value: ', process.env.MAL_CLIENT_ID);\n// import dbOperation from \"../data/dbFiles/dbOperation\"\n\n// const ActorID   = 0;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ActorName = 1;\n// const Favorites = 2;\nconst ImageURL = 3;\n\n// export const myList = text;\n// const actors = myList.actors;\nconst topActors = [118, 185, 65, 672, 869, 34785, 212, 2, 270, 591, 99, 11817, 8, 87];\nvar actorsLeft = [];\nresetLeft();\nvar started = false;\nconst Home = () => {\n  _s();\n  var firstIndex;\n  started ? firstIndex = Math.trunc(Math.random() * topActors.length) : firstIndex = 0;\n  // const firstActor = actors[topActors[firstIndex]];\n  const [actorID, setActorID] = useState(0); //topActors[firstIndex]);\n  const loading = [0, \"Loading\", 0, \"https://media.istockphoto.com/id/1360005202/vector/loon-gavia.jpg?s=612x612&w=0&k=20&c=y6ZnKz2hLqGnFjNWuQpxwGCuqT3NYk4vz0MOtEyM3Bc=\"];\n  // const loadingRoles = {ActorID: 0, ActorName: \"Loading\", Favorites: 0, ImageURL: \"https://media.istockphoto.com/id/1360005202/vector/loon-gavia.jpg?s=612x612&w=0&k=20&c=y6ZnKz2hLqGnFjNWuQpxwGCuqT3NYk4vz0MOtEyM3Bc=\"}\n  // const [prev, setPrev] = useState();\n  const [index, setIndex] = useState(firstIndex);\n  const [actor, setActor] = useState(loading);\n  // const {loadedID} = useParams();\n  // console.log(actor)\n\n  // console.log(\"actor\", actor)\n  // console.log(\"actorID\", actorID)\n\n  useEffect(() => {\n    started = false;\n  }, []);\n\n  // console.log(actor)\n\n  const getData = async actID => {\n    // console.log(actor.actorID)\n    const actorData = await fetch('/actor', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        ActorID: actID\n      })\n    }).then(res => res.json());\n    setActor(Object.values(actorData[0]));\n    // setActorID(actorData[0][ActorID])\n    // console.log(Object.values(actorData[0]));\n\n    ls.set('actor', actorData[0]);\n  };\n\n  // const getMALData = async() => {\n  //     console.log(\"getting MAL data\")\n  //     const malData = await fetch ('/mal', {\n  //       method: 'POST',\n  //       headers: {\n  //         'content-type': 'application/json',\n  //         'Accept': 'application/json'\n  //       },\n  //       body: JSON.stringify({\n  //         Username: user\n  //       })\n  //     })\n  //     .then(res => res.json());\n  //     let temp = [];\n  //     console.log(malData.data[0].node)\n  //     for (let i in malData.data) {\n  //         temp[i] = malData.data[i].node.id;\n  //     }\n  //     setMyList(temp)\n  // }\n\n  function nextActor() {\n    // setActor(loading)\n    started = true;\n    let temp = 0;\n    setIndex(Math.trunc(Math.random() * actorsLeft.length - 1));\n    if (actorsLeft.length > 0) {\n      temp = actorsLeft.splice(index, 1)[0];\n      // console.log(\"temp\", temp)\n      setActorID(temp);\n    } else {\n      resetLeft();\n      setIndex(Math.trunc(Math.random() * actorsLeft.length - 1));\n      nextActor();\n    }\n    getData(temp);\n    // getRoleData();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"A tool to display all the works of the voice actors you might know!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Seiyu is a Japanese word for voice actor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"All data obtained from \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"http://MyAnimeList.net\",\n          children: \"MyAnimeList.net\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewer\",\n      children: actor[0] !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ShowRoleToggle, {\n          id: \"topActor\",\n          actorID: actorID,\n          actorName: actor[ActorName]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"homeRightPane\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"homeActorImg\",\n            src: actor[ImageURL],\n            alt: actor[ActorName]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nextActor\",\n            onClick: nextActor,\n            children: \"View Another!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"firstActor\",\n        onClick: nextActor,\n        children: \"Take a Look!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n\n  // async function getTest() {\n  //     console.log(\"test clicked\")\n  //     axios({\n  //       method: \"GET\",\n  //       url: \"/mal\"\n  //     })\n  //     .then((response) => {\n  //       const res = response.data\n  //       console.log(res)\n  //       setMyList(({\n  //         name: res.name,\n  //         about: res.about}))\n  //       }).catch((error) => {\n  //         if (error.respose) {\n  //             console.log(error.response)\n  //             console.log(error.response.status)\n  //             console.log(error.response.headers)\n  //         }\n  //     })}\n\n  async function runAPI() {\n    var url = 'https://api.jikan.moe/v4/anime/1/characters';\n    var trying = true;\n    var attempts = 0;\n    while (trying) {\n      try {\n        console.log(\"vaParse, fetching \");\n        const response = await fetch(url, {\n          mode: 'cors',\n          headers: {\n            'X-MAL-CLIENT-ID': '5dbcd29b3178e6d62ec7ecf17b4daf56',\n            'Access-Control-Allow-Origin': '*'\n          }\n        });\n        var anime = await response.json();\n        response.close();\n      } catch (e) {\n        // print(\"Exception at gui.vaParse\")\n        if (attempts == 20) {\n          anime = {};\n          trying = false;\n        } else {\n          sleep(100);\n        }\n        attempts += 1;\n      }\n    }\n  }\n};\n_s(Home, \"ce1jbp/faUy57msWj71gGurcs9o=\");\n_c = Home;\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nfunction resetLeft() {\n  for (let i = 0; i < topActors.length; i++) {\n    actorsLeft[i] = topActors[i];\n  }\n}\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","useParams","ShowRoleToggle","ls","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ActorName","ImageURL","topActors","actorsLeft","resetLeft","started","Home","_s","firstIndex","Math","trunc","random","length","actorID","setActorID","loading","index","setIndex","actor","setActor","getData","actID","actorData","fetch","method","headers","body","JSON","stringify","ActorID","then","res","json","Object","values","set","nextActor","temp","splice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","id","actorName","src","alt","onClick","runAPI","url","trying","attempts","console","log","response","mode","anime","close","e","sleep","_c","ms","Promise","resolve","setTimeout","i","$RefreshReg$"],"sources":["C:/Users/aphen/OneDrive/Documents/GitHub/react-voice-actors/frontend/src/pages/Home.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n// import text from '../data/MasterV3.json'\r\nimport ShowRoleToggle from \"../components/ShowRoleToggle\";\r\nimport ls from 'local-storage';\r\nimport axios from \"axios\";\r\n// import { getMAL } from \"../../../backend/dbFiles/dbOperation\";\r\n// require('dotenv').config();\r\n// console.log('Your environment variable MAL_CLIENT_ID has the value: ', process.env.MAL_CLIENT_ID);\r\n// import dbOperation from \"../data/dbFiles/dbOperation\"\r\n\r\n// const ActorID   = 0;\r\nconst ActorName = 1;\r\n// const Favorites = 2;\r\nconst ImageURL  = 3;\r\n\r\n// export const myList = text;\r\n// const actors = myList.actors;\r\nconst topActors = [118, 185, 65, 672, 869, 34785, 212, 2, 270, 591, 99, 11817, 8, 87]\r\nvar actorsLeft = [];\r\nresetLeft();\r\nvar started = false;\r\n\r\nconst Home = () => {\r\n    \r\n    var firstIndex;\r\n    started ? firstIndex = Math.trunc(Math.random() * topActors.length)\r\n            : firstIndex = 0;\r\n    // const firstActor = actors[topActors[firstIndex]];\r\n    const [actorID, setActorID] = useState(0)//topActors[firstIndex]);\r\n    const loading = [ 0, \"Loading\", 0, \"https://media.istockphoto.com/id/1360005202/vector/loon-gavia.jpg?s=612x612&w=0&k=20&c=y6ZnKz2hLqGnFjNWuQpxwGCuqT3NYk4vz0MOtEyM3Bc=\"]\r\n    // const loadingRoles = {ActorID: 0, ActorName: \"Loading\", Favorites: 0, ImageURL: \"https://media.istockphoto.com/id/1360005202/vector/loon-gavia.jpg?s=612x612&w=0&k=20&c=y6ZnKz2hLqGnFjNWuQpxwGCuqT3NYk4vz0MOtEyM3Bc=\"}\r\n    // const [prev, setPrev] = useState();\r\n    const [index, setIndex]     = useState(firstIndex);\r\n    const [actor, setActor]     = useState(loading);\r\n    // const {loadedID} = useParams();\r\n    // console.log(actor)\r\n\r\n    // console.log(\"actor\", actor)\r\n    // console.log(\"actorID\", actorID)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        started = false;\r\n    }, [])\r\n\r\n    // console.log(actor)\r\n\r\n    const getData = async(actID) => {\r\n        // console.log(actor.actorID)\r\n        const actorData = await fetch ('/actor', {\r\n          method: 'POST',\r\n          headers: {\r\n            'content-type': 'application/json',\r\n            'Accept': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            ActorID: actID\r\n          })\r\n        })\r\n        .then(res => res.json());\r\n        setActor(Object.values(actorData[0]));\r\n        // setActorID(actorData[0][ActorID])\r\n        // console.log(Object.values(actorData[0]));\r\n\r\n        ls.set('actor', actorData[0])\r\n    }\r\n\r\n    // const getMALData = async() => {\r\n    //     console.log(\"getting MAL data\")\r\n    //     const malData = await fetch ('/mal', {\r\n    //       method: 'POST',\r\n    //       headers: {\r\n    //         'content-type': 'application/json',\r\n    //         'Accept': 'application/json'\r\n    //       },\r\n    //       body: JSON.stringify({\r\n    //         Username: user\r\n    //       })\r\n    //     })\r\n    //     .then(res => res.json());\r\n    //     let temp = [];\r\n    //     console.log(malData.data[0].node)\r\n    //     for (let i in malData.data) {\r\n    //         temp[i] = malData.data[i].node.id;\r\n    //     }\r\n    //     setMyList(temp)\r\n    // }\r\n\r\n\r\n    function nextActor() {\r\n        // setActor(loading)\r\n        started = true;\r\n        let temp = 0;\r\n        setIndex(Math.trunc(Math.random() * actorsLeft.length - 1));\r\n        if (actorsLeft.length > 0) {\r\n            temp = actorsLeft.splice(index, 1)[0]\r\n            // console.log(\"temp\", temp)\r\n            setActorID(temp);\r\n        }\r\n        else {\r\n            resetLeft();\r\n            setIndex(Math.trunc(Math.random() * actorsLeft.length - 1));\r\n            nextActor();\r\n        }\r\n        getData(temp);\r\n        // getRoleData();\r\n    }\r\n    \r\n\r\n\r\n    return ( \r\n        <div className=\"home\">            \r\n            <div>\r\n                <h2>A tool to display all the works of the voice actors you might know!</h2>\r\n                <br></br>\r\n                <h5>Seiyu is a Japanese word for voice actor</h5>\r\n                <br></br>\r\n                <h6>All data obtained from <a href=\"http://MyAnimeList.net\">MyAnimeList.net</a></h6>\r\n\r\n            </div>\r\n            <div className=\"viewer\">\r\n                {/* {console.log(\"actorID \", actorID)} */}\r\n                {/* {combineRoles()} */}\r\n                {actor[0] !== 0\r\n                    ?<><ShowRoleToggle id=\"topActor\" actorID={actorID} actorName={actor[ActorName]}/>\r\n                    {/* // flag={myList.length > 1}/> */}\r\n                        <div id=\"homeRightPane\">\r\n                            <img className=\"homeActorImg\" src={actor[ImageURL]} alt={actor[ActorName]}></img>\r\n                            <button className=\"nextActor\" onClick={nextActor}>View Another!</button>\r\n                        </div></>\r\n                    :<button className=\"firstActor\" onClick={nextActor}>Take a Look!</button>\r\n                }\r\n                {/* {console.log(\"img \", actor.img)} */}\r\n            </div>\r\n        </div>\r\n     );\r\n\r\n    // async function getTest() {\r\n    //     console.log(\"test clicked\")\r\n    //     axios({\r\n    //       method: \"GET\",\r\n    //       url: \"/mal\"\r\n    //     })\r\n    //     .then((response) => {\r\n    //       const res = response.data\r\n    //       console.log(res)\r\n    //       setMyList(({\r\n    //         name: res.name,\r\n    //         about: res.about}))\r\n    //       }).catch((error) => {\r\n    //         if (error.respose) {\r\n    //             console.log(error.response)\r\n    //             console.log(error.response.status)\r\n    //             console.log(error.response.headers)\r\n    //         }\r\n    //     })}\r\n\r\n     async function runAPI() {\r\n        var url = 'https://api.jikan.moe/v4/anime/1/characters'\r\n        var trying = true\r\n        var attempts = 0\r\n        while (trying) {\r\n            try {\r\n                console.log(\"vaParse, fetching \")\r\n                const response = await fetch(url, {\r\n                    mode: 'cors',\r\n                    headers:{\r\n                        'X-MAL-CLIENT-ID': '5dbcd29b3178e6d62ec7ecf17b4daf56',\r\n                        'Access-Control-Allow-Origin': '*'\r\n                    }})\r\n                var anime = await response.json()\r\n                response.close()\r\n            } catch (e) {\r\n                // print(\"Exception at gui.vaParse\")\r\n                if (attempts == 20 ) {\r\n                    anime = {}\r\n                    trying = false\r\n                }\r\n                else {\r\n                    sleep(100)\r\n                }\r\n                attempts+= 1\r\n            }\r\n        }\r\n     }\r\n}\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nfunction resetLeft() {\r\n    for(let i = 0; i < topActors.length; i++) {\r\n        actorsLeft[i] = topActors[i];\r\n    }\r\n}    \r\n \r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}