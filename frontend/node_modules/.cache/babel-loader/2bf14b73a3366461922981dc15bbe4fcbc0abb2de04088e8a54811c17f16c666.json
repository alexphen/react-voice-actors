{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aphen\\\\OneDrive\\\\Documents\\\\GitHub\\\\react-voice-actors\\\\frontend\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as React from 'react';\nimport { Link, useMatch, useResolvedPath } from \"react-router-dom\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = ({\n  username\n}) => {\n  _s();\n  var list = \"All Anime\";\n  const [user, setUser] = useState(\"\");\n  const [myList, setMyList] = useState([]);\n\n  // const setDBList = async() => {\n  //     const lister = await fetch('/api/list', {\n  //         method: 'POST',\n  //         headers: {\n  //           'content-type': 'application/json',\n  //           'Accept': 'application/json'\n  //         },\n  //         body: JSON.stringify({\n  //           ids: myList\n  //         })\n  //       })\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"nav\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"navLeftPane\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"site-title\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/Anime/\",\n        children: \"Anime Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/Actor/\",\n        children: \"Actor Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n  module.exports = {\n    user,\n    myList\n  };\n};\n_s(Navbar, \"D9xPAdjHI7aKvrK7ICxKW9KuYJM=\");\n_c = Navbar;\nfunction CustomLink({\n  to,\n  children,\n  ...props\n}) {\n  _s2();\n  const resolvedPath = useResolvedPath(to);\n  const isActive = useMatch({\n    path: resolvedPath.pathname,\n    end: true\n  });\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: isActive ? \"active\" : \"\",\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: to,\n      ...props,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 13\n  }, this);\n}\n\n// return ( \n//     <nav className=\"navbar\">\n//         <h1>MyAnimeList Voice Actors</h1>\n//         <ul className=\"links\">\n//             <a href=\"/\">Home</a>\n//             {/* <a onClick={openSearch}>Show Search</a> */}\n//             <a href=\"/Show\">Show Search</a>\n//             <a href=\"/Actor\">Actor Search</a>\n//         </ul>\n//     </nav>\n//  );\n// }\n\n// const [open, setOpen] = useState(false);\n\n// function openSearch() {\n//     setOpen(!open);\n// }\n\n// const [keyword, setKeyword] = useState('');\n// const [shows, setShows] = useState([]);\n// const [titles, setTitles] = useState([]);\n// const [showSelected, setShowSelected] = useState(myList.shows[1]);\n\n// const updateKeyword = (keyword) => {\n\n//     setKeyword(keyword);\n//     if(keyword === \"\") {\n//         setTitles([])\n//     }\n//     else {\n//         var results = [];\n//         var tRes = [];\n//         for (var id in myList.shows) {\n//             var curr = myList.shows[id];\n//             if (curr.title.toLowerCase().includes(keyword.toLowerCase())) {\n//                 results.push(curr)\n//                 tRes.push(curr.title)\n//             }\n//         }\n//         setTitles(tRes);\n//         setShows(results);\n//     }\n//     // console.log(titles)\n// }\n_s2(CustomLink, \"Dfq6KH74NsOUUXPzETtO7DGllew=\", false, function () {\n  return [useResolvedPath, useMatch];\n});\n_c2 = CustomLink;\nexport default Navbar;\nvar _c, _c2;\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"CustomLink\");","map":{"version":3,"names":["React","Link","useMatch","useResolvedPath","useState","useEffect","useContext","jsxDEV","_jsxDEV","Navbar","username","_s","list","user","setUser","myList","setMyList","className","children","id","to","fileName","_jsxFileName","lineNumber","columnNumber","CustomLink","module","exports","_c","props","_s2","resolvedPath","isActive","path","pathname","end","_c2","$RefreshReg$"],"sources":["C:/Users/aphen/OneDrive/Documents/GitHub/react-voice-actors/frontend/src/components/Navbar.js"],"sourcesContent":["import * as React from 'react';\r\nimport { Link, useMatch, useResolvedPath } from \"react-router-dom\"\r\nimport {useState, useEffect, useContext} from \"react\";\r\n\r\nconst Navbar = ({ username }) => {\r\n    var list = \"All Anime\";\r\n    const [user, setUser] = useState(\"\");\r\n    const [myList, setMyList]   = useState([]);\r\n\r\n\r\n    \r\n    // const setDBList = async() => {\r\n    //     const lister = await fetch('/api/list', {\r\n    //         method: 'POST',\r\n    //         headers: {\r\n    //           'content-type': 'application/json',\r\n    //           'Accept': 'application/json'\r\n    //         },\r\n    //         body: JSON.stringify({\r\n    //           ids: myList\r\n    //         })\r\n    //       })\r\n    // }\r\n\r\n\r\n    return (\r\n        <nav className=\"nav\">\r\n            <div id='navLeftPane'>\r\n                <Link to=\"/\" className=\"site-title\">\r\n                    Home\r\n                </Link>\r\n            </div>\r\n            <ul>\r\n                <CustomLink to=\"/Anime/\">Anime Search</CustomLink>\r\n                <CustomLink to=\"/Actor/\">Actor Search</CustomLink>\r\n            </ul>\r\n        </nav>\r\n    )\r\n    \r\n    module.exports = {\r\n        user,\r\n        myList\r\n    }\r\n}\r\n      \r\n    function CustomLink({ to, children, ...props }) {\r\n        const resolvedPath = useResolvedPath(to)\r\n        const isActive = useMatch({ path: resolvedPath.pathname, end: true })\r\n        \r\n        return (\r\n            <li className={isActive ? \"active\" : \"\"}>\r\n            <Link to={to} {...props}>\r\n                {children}\r\n            </Link>\r\n            </li>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    // return ( \r\n    //     <nav className=\"navbar\">\r\n    //         <h1>MyAnimeList Voice Actors</h1>\r\n    //         <ul className=\"links\">\r\n    //             <a href=\"/\">Home</a>\r\n    //             {/* <a onClick={openSearch}>Show Search</a> */}\r\n    //             <a href=\"/Show\">Show Search</a>\r\n    //             <a href=\"/Actor\">Actor Search</a>\r\n    //         </ul>\r\n    //     </nav>\r\n    //  );\r\n// }\r\n\r\n// const [open, setOpen] = useState(false);\r\n\r\n    // function openSearch() {\r\n    //     setOpen(!open);\r\n    // }\r\n\r\n    // const [keyword, setKeyword] = useState('');\r\n    // const [shows, setShows] = useState([]);\r\n    // const [titles, setTitles] = useState([]);\r\n    // const [showSelected, setShowSelected] = useState(myList.shows[1]);\r\n    \r\n    // const updateKeyword = (keyword) => {\r\n\r\n    //     setKeyword(keyword);\r\n    //     if(keyword === \"\") {\r\n    //         setTitles([])\r\n    //     }\r\n    //     else {\r\n    //         var results = [];\r\n    //         var tRes = [];\r\n    //         for (var id in myList.shows) {\r\n    //             var curr = myList.shows[id];\r\n    //             if (curr.title.toLowerCase().includes(keyword.toLowerCase())) {\r\n    //                 results.push(curr)\r\n    //                 tRes.push(curr.title)\r\n    //             }\r\n    //         }\r\n    //         setTitles(tRes);\r\n    //         setShows(results);\r\n    //     }\r\n    //     // console.log(titles)\r\n    // }\r\n \r\nexport default Navbar;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}