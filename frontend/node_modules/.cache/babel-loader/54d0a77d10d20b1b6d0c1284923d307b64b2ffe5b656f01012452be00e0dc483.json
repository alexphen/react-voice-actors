{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aphen\\\\OneDrive\\\\Documents\\\\GitHub\\\\react-voice-actors\\\\frontend\\\\src\\\\pages\\\\Actor.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst actorName = 0,\n  actorImg = 1,\n  charID = 2,\n  charName = 3,\n  favorites = 4,\n  charImg = 5,\n  actorID = 6,\n  showID = 7,\n  title = 8,\n  aFavs = 9;\nexport default function Actor({\n  user,\n  myList\n}) {\n  _s();\n  const {\n    id,\n    name\n  } = useParams();\n  const [actor, setActor] = useState([id || 0, name || \"\", \"\", 0]);\n  const [roles, setRoles] = useState([]);\n  const [names, setNames] = useState([]);\n  const [ids, setIds] = useState([]);\n  const [keyword, setKeyword] = useState('');\n  const navigate = useNavigate();\n  var filterFlag = user.length > 0;\n  // console.log(actor)\n\n  useEffect(() => {\n    if (id > 0) getData();\n  }, []);\n  useEffect(() => {\n    if (id > 0) {\n      setKeyword(\"\");\n      getSearchData(\"\");\n      getData();\n    }\n  }, [id]);\n  useEffect(() => {\n    if (id > 0) {\n      setKeyword(\"\");\n      getSearchData(\"\");\n      getData();\n    }\n    if (roles.length < 1) {\n      navigate(\"/Actor\");\n    }\n  }, [myList]);\n  const getData = async () => {\n    // console.log(actor.actorID)\n    const actorData = await fetch('/api/actorFull', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        ActorID: id,\n        myList: myList,\n        flag: filterFlag\n      })\n    }).then(res => res.json());\n    for (let i in actorData) {\n      actorData[i] = Object.values(actorData[i]);\n    }\n    if (actorData.length == 0) {\n      setActor(0, \"\", \"\", 0);\n      navigate(\"/Actor\");\n    } else {\n      // console.log(actorData[0][actorID], actorData[0][actorName], actorData[0][actorImg])\n      setActor([actorData[0][actorID], actorData[0][actorName], actorData[0][actorImg], actorData[0][aFavs]]);\n      setRoles(actorData);\n    }\n  };\n  const getSearchData = async keyword => {\n    console.log(\"searchng\");\n    setKeyword(keyword);\n    setNames([]);\n    // if(keyword === \"\") {\n    //     setNames([])\n    // }\n    // else {\n    var idRes = [];\n    var nRes = [];\n    const searchData = await fetch('/api/searchActor', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        name: keyword,\n        myList: myList,\n        flag: filterFlag\n      })\n    }).then(res => res.json());\n    // console.log(\"SD\", searchData)\n\n    // console.log(\"RD\", returnedData)\n    for (let i in searchData) {\n      searchData[i] = Object.values(searchData[i]);\n      if (searchData[i][0] > 0) {\n        nRes.push(searchData[i][1]);\n        idRes.push(searchData[i][0]);\n      }\n    }\n    setNames(nRes);\n    setIds(idRes);\n    // console.log(nRes)\n    // console.log(idRes)\n    // }\n  };\n\n  return (\n    /*#__PURE__*/\n    // <><div className=\"actorSearchSide\">\n    //     <input\n    //         id=\"actorSearch\"\n    //         className=\"search\"\n    //         type=\"search\"\n    //         placeholder=\"Search Actor\"\n    //         autoComplete=\"off\"\n    //         onChange={(e) => getSearchData(e.target.value)}\n    //         value={keyword} />\n    //     <div className=\"results\">\n    //         {/* Display 10 filtered results. Change Show on click */}\n    //         {names.slice(0,10).map((name, index) => (\n    //             <Link to={`/Actor/${ids[index]}/`} className=\"resBox\" key={name}>{name}</Link>\n    //         ))}\n    //     </div>\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"actorPage\",\n      children: actor[0] > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [combineRoles(), bubbleSort(), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"actorTopPane\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"actorTitle\",\n            children: actor[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actorSearchSide\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"actorSearch\",\n              className: \"search\",\n              type: \"search\",\n              placeholder: \"Search Actor\",\n              autoComplete: \"off\",\n              onChange: e => getSearchData(e.target.value),\n              value: keyword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"results\",\n              children: names.slice(0, 10).map((name, index) => /*#__PURE__*/_jsxDEV(Link, {\n                to: `/Actor/${ids[index]}/`,\n                className: \"resBox\",\n                children: name\n              }, name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"actorMain\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actorRoles\",\n            children: roles.map((role, n) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"actorRole\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: role[charImg]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: role[charName]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"(\" + role[favorites] + \" Favorites)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/Anime/${role[showID][n]}/${role[title][0]}`,\n                  className: \"actorInfoTitle\",\n                  children: role[title][0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"actorRightPane\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"actorInfo\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"actorName\",\n                children: actor[1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"actorImg\",\n                src: actor[2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Favorites: \", actor[3]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"toTop\",\n          src: require(\"../assets/toTop.png\"),\n          onClick: toTop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"actorTopPane\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"begin\",\n          children: \"Search for an Actor to Begin!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actorSearchSide\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"actorSearch\",\n            className: \"search\",\n            type: \"search\",\n            placeholder: \"Search Actor\",\n            autoComplete: \"off\",\n            onChange: e => getSearchData(e.target.value),\n            value: keyword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results\",\n            children: names.slice(0, 10).map((name, index) => /*#__PURE__*/_jsxDEV(Link, {\n              to: `/Actor/${ids[index]}/`,\n              className: \"resBox\",\n              children: name\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)\n  );\n  function combineRoles() {\n    // console.log(roles, roles.length)\n    var currRoleShowIDs = [];\n    var currRoleTitles = [];\n    for (let i = 0; i < roles.length; i++) {\n      // console.log(roles[i][title])\n      if (typeof roles[i][title] == 'string') {\n        currRoleShowIDs = [roles[i][showID]];\n        currRoleTitles = [roles[i][title]];\n        // var currRoleShowIDs = [roles[i].ShowID];\n        // var currRoleTitles = [roles[i].Title];\n      } else {\n        currRoleShowIDs = roles[i][showID];\n        currRoleTitles = roles[i][title];\n      }\n      for (let p = i + 1; p < roles.length; p++) {\n        if (roles[i][charID] === roles[p][charID]) {\n          // console.log(currRoleShowIDs)\n          currRoleShowIDs.push(roles[p][showID]);\n          currRoleTitles.push(roles[p][title]);\n          // console.log(currRoleTitles)\n          roles.splice(p, 1);\n          p--;\n        } else {\n          i = p - 1;\n          break;\n        }\n      }\n      roles[i][showID] = currRoleShowIDs;\n      roles[i][title] = currRoleTitles;\n    }\n    // console.log(roles)\n  }\n\n  function bubbleSort() {\n    // roleOrder = [];\n    // for (var i in roles) {\n    //     roleOrder.push(i)\n    // }\n    var i, j, temp;\n    var n = roles.length;\n    var swapped;\n    for (i = 0; i < n - 1; i++) {\n      swapped = false;\n      for (j = 0; j < n - i - 1; j++) {\n        if (roles[j][favorites] < roles[j + 1][favorites]) {\n          // Swap arr[j] and arr[j+1]\n          temp = roles[j];\n          roles[j] = roles[j + 1];\n          roles[j + 1] = temp;\n          swapped = true;\n        }\n      }\n      // IF no two elements were \n      // swapped by inner loop, then break\n      if (swapped === false) break;\n    }\n  }\n  function toTop() {\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\"\n    });\n  }\n}\n_s(Actor, \"yuhLAijypZCq8sPXzjdDWSkNVxU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Actor;\nvar _c;\n$RefreshReg$(_c, \"Actor\");","map":{"version":3,"names":["useEffect","useState","useParams","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","actorName","actorImg","charID","charName","favorites","charImg","actorID","showID","title","aFavs","Actor","user","myList","_s","id","name","actor","setActor","roles","setRoles","names","setNames","ids","setIds","keyword","setKeyword","navigate","filterFlag","length","getData","getSearchData","actorData","fetch","method","headers","body","JSON","stringify","ActorID","flag","then","res","json","i","Object","values","console","log","idRes","nRes","searchData","push","className","children","combineRoles","bubbleSort","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","autoComplete","onChange","e","target","value","slice","map","index","to","role","n","src","require","onClick","toTop","currRoleShowIDs","currRoleTitles","p","splice","j","temp","swapped","window","scroll","top","left","behavior","_c","$RefreshReg$"],"sources":["C:/Users/aphen/OneDrive/Documents/GitHub/react-voice-actors/frontend/src/pages/Actor.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\r\n\r\nconst   actorName   = 0,\r\n        actorImg    = 1,\r\n        charID      = 2,\r\n        charName    = 3,\r\n        favorites   = 4,\r\n        charImg     = 5,\r\n        actorID     = 6,\r\n        showID      = 7,\r\n        title       = 8,\r\n        aFavs       = 9;\r\n\r\nexport default function Actor({user, myList}) {\r\n    \r\n    const {id, name} = useParams();\r\n    const [actor, setActor] = useState([id || 0, name || \"\", \"\", 0]);\r\n    const [roles, setRoles] = useState([]);\r\n    const [names, setNames] = useState([]);\r\n    const [ids, setIds]     = useState([]);\r\n    const [keyword, setKeyword] = useState('');\r\n    const navigate = useNavigate();\r\n    \r\n    var filterFlag = user.length > 0;\r\n    // console.log(actor)\r\n\r\n\r\n    useEffect(() => {\r\n        if (id > 0)\r\n            getData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (id > 0) {\r\n            setKeyword(\"\")\r\n            getSearchData(\"\")\r\n            getData();\r\n        }\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        if (id > 0) {\r\n            setKeyword(\"\")\r\n            getSearchData(\"\")\r\n            getData();\r\n        }\r\n        if (roles.length < 1) {\r\n            navigate(\"/Actor\")\r\n        }\r\n    }, [myList])\r\n\r\n    const getData = async() => {\r\n        // console.log(actor.actorID)\r\n        const actorData = await fetch ('/api/actorFull', {\r\n          method: 'POST',\r\n          headers: {\r\n            'content-type': 'application/json',\r\n            'Accept': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            ActorID: id,\r\n            myList: myList,\r\n            flag: filterFlag\r\n          })\r\n        })\r\n        .then(res => res.json());\r\n        for (let i in actorData) {\r\n            actorData[i] = Object.values(actorData[i])\r\n        }\r\n        if (actorData.length==0) {\r\n            setActor(0, \"\", \"\", 0)\r\n            navigate(\"/Actor\")\r\n        }\r\n        else {\r\n            // console.log(actorData[0][actorID], actorData[0][actorName], actorData[0][actorImg])\r\n            setActor([actorData[0][actorID], actorData[0][actorName], actorData[0][actorImg], actorData[0][aFavs]]);\r\n            setRoles(actorData)\r\n        }\r\n    }\r\n\r\n    const getSearchData = async(keyword) => {\r\n        console.log(\"searchng\")\r\n        setKeyword(keyword);\r\n        setNames([])\r\n        // if(keyword === \"\") {\r\n        //     setNames([])\r\n        // }\r\n        // else {\r\n            var idRes = [];\r\n            var nRes = [];\r\n\r\n            const searchData = await fetch ('/api/searchActor', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'content-type': 'application/json',\r\n                  'Accept': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                  name: keyword,\r\n                  myList: myList,\r\n                  flag: filterFlag\r\n                })\r\n            })\r\n            .then(res => res.json());\r\n            // console.log(\"SD\", searchData)\r\n\r\n            // console.log(\"RD\", returnedData)\r\n            for (let i in searchData) {\r\n                searchData[i] = Object.values(searchData[i]);\r\n                if (searchData[i][0] > 0) {\r\n                    nRes.push(searchData[i][1]);\r\n                    idRes.push(searchData[i][0]);\r\n                }\r\n            }\r\n            setNames(nRes);\r\n            setIds(idRes);\r\n            // console.log(nRes)\r\n            // console.log(idRes)\r\n        // }\r\n    }\r\n\r\n    return (\r\n        // <><div className=\"actorSearchSide\">\r\n        //     <input\r\n        //         id=\"actorSearch\"\r\n        //         className=\"search\"\r\n        //         type=\"search\"\r\n        //         placeholder=\"Search Actor\"\r\n        //         autoComplete=\"off\"\r\n        //         onChange={(e) => getSearchData(e.target.value)}\r\n        //         value={keyword} />\r\n        //     <div className=\"results\">\r\n        //         {/* Display 10 filtered results. Change Show on click */}\r\n        //         {names.slice(0,10).map((name, index) => (\r\n        //             <Link to={`/Actor/${ids[index]}/`} className=\"resBox\" key={name}>{name}</Link>\r\n        //         ))}\r\n        //     </div>\r\n        // </div>\r\n        <div className=\"actorPage\">\r\n            {/* actor is set */}\r\n            {actor[0] > 0\r\n                ? <> \r\n                {combineRoles()}\r\n                {bubbleSort()} \r\n                <div id=\"actorTopPane\">\r\n                    <h2 id=\"actorTitle\">{actor[1]}</h2>\r\n                    <div className=\"actorSearchSide\">\r\n                        <input\r\n                            id=\"actorSearch\"\r\n                            className=\"search\"\r\n                            type=\"search\"\r\n                            placeholder=\"Search Actor\"\r\n                            autoComplete=\"off\"\r\n                            onChange={(e) => getSearchData(e.target.value)}\r\n                            value={keyword} />\r\n                        <div className=\"results\">\r\n                            {/* Display 10 filtered results. Change Show on click */}\r\n                            {names.slice(0,10).map((name, index) => (\r\n                                <Link to={`/Actor/${ids[index]}/`} className=\"resBox\" key={name}>{name}</Link>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"actorMain\">\r\n                    <div className=\"actorRoles\">\r\n                        {roles.map((role, n) => \r\n                            <div className=\"actorRole\">\r\n                                <img src={role[charImg]}></img>\r\n                                    <div className=\"info\">\r\n                                        <h3>{role[charName]}</h3>\r\n                                        <p>{\"(\" + role[favorites] + \" Favorites)\"}</p>\r\n                                        <Link to={`/Anime/${role[showID][n]}/${role[title][0]}`} className=\"actorInfoTitle\">{role[title][0]}</Link>\r\n                                        {/* IF MAPPING ALL ROLES ↓ */}\r\n                                        {/* {role[title].map((title, n) =>\r\n                                            <Link to={`/Anime/${role[showID][n]}/${title}`} key={n} className=\"actorInfoTitle\">{title}</Link>\r\n                                        )} */}\r\n                                    </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div id=\"actorRightPane\">\r\n                        <div className=\"actorInfo\">\r\n                            <h1 className=\"actorName\">{actor[1]}</h1>\r\n                            <img className=\"actorImg\" src={actor[2]}></img>\r\n                            <p>Favorites: {actor[3]}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <img id=\"toTop\" src={require(\"../assets/toTop.png\")} onClick={toTop}></img>\r\n                </>\r\n                : <div id=\"actorTopPane\">\r\n                        <h2 id=\"begin\">Search for an Actor to Begin!</h2>\r\n                        <div className=\"actorSearchSide\">\r\n                        <input\r\n                            id=\"actorSearch\"\r\n                            className=\"search\"\r\n                            type=\"search\"\r\n                            placeholder=\"Search Actor\"\r\n                            autoComplete=\"off\"\r\n                            onChange={(e) => getSearchData(e.target.value)}\r\n                            value={keyword} />\r\n                        <div className=\"results\">\r\n                            {/* Display 10 filtered results. Change Show on click */}\r\n                            {names.slice(0,10).map((name, index) => (\r\n                                <Link to={`/Actor/${ids[index]}/`} className=\"resBox\" key={name}>{name}</Link>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n    function combineRoles() {\r\n        // console.log(roles, roles.length)\r\n        var currRoleShowIDs = [];\r\n        var currRoleTitles = [];\r\n        for (let i = 0; i < roles.length; i++) {\r\n            // console.log(roles[i][title])\r\n            if (typeof roles[i][title] == 'string') {\r\n                currRoleShowIDs = [roles[i][showID]];\r\n                currRoleTitles = [roles[i][title]];\r\n                // var currRoleShowIDs = [roles[i].ShowID];\r\n                // var currRoleTitles = [roles[i].Title];\r\n            }\r\n            else {\r\n                currRoleShowIDs = roles[i][showID];\r\n                currRoleTitles = roles[i][title];\r\n            }\r\n            for (let p = i + 1; p < roles.length; p++) {\r\n                if(roles[i][charID] === roles[p][charID]) {\r\n                    // console.log(currRoleShowIDs)\r\n                    currRoleShowIDs.push(roles[p][showID]);\r\n                    currRoleTitles.push(roles[p][title]);\r\n                    // console.log(currRoleTitles)\r\n                    roles.splice(p, 1);\r\n                    p--;\r\n                }\r\n                else {\r\n                    i = p - 1;\r\n                    break\r\n                }\r\n            }\r\n            roles[i][showID] = currRoleShowIDs;\r\n            roles[i][title] = currRoleTitles;\r\n        }\r\n        // console.log(roles)\r\n    }\r\n\r\n    function bubbleSort()\r\n    {\r\n        // roleOrder = [];\r\n        // for (var i in roles) {\r\n        //     roleOrder.push(i)\r\n        // }\r\n        var i, j, temp;\r\n        var n = roles.length;\r\n        var swapped;\r\n        for (i = 0; i < n - 1; i++) \r\n        {\r\n            swapped = false;\r\n            for (j = 0; j < n - i - 1; j++) \r\n            {\r\n                if (roles[j][favorites] < roles[j + 1][favorites]) \r\n                {\r\n                    // Swap arr[j] and arr[j+1]\r\n                    temp = roles[j];\r\n                    roles[j] = roles[j + 1];\r\n                    roles[j + 1] = temp;\r\n                    swapped = true;\r\n                }\r\n            }\r\n            // IF no two elements were \r\n            // swapped by inner loop, then break\r\n            if (swapped === false)\r\n            break;\r\n        }\r\n    }\r\n\r\n    function toTop() {\r\n        window.scroll({top: 0, left: 0, behavior: \"smooth\"})\r\n    }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}