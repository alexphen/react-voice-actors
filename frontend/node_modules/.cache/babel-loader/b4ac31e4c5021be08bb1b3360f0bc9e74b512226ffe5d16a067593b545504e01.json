{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aphen\\\\OneDrive\\\\Documents\\\\GitHub\\\\react-voice-actors\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Navbar from \"./components/Navbar\";\nimport Show from \"./pages/Show\";\nimport Home from \"./pages/Home\";\nimport Actor from \"./pages/Actor\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { useCookies } from \"react-cookie\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cookies, setCookies] = useCookies([\"acc\"]);\n  const [entry, setEntry] = useState(cookies.acc || \"\");\n  const [myList, setMyList] = useState([]);\n  const [user, setUser] = useState(cookies.acc || \"\");\n\n  // useEffect(() => {\n  // \tsetDBList();\n  // }, [myList])\n\n  useEffect(() => {\n    getMALData();\n  }, []);\n  const getMALData = async () => {\n    if (entry != \"\") {\n      console.log(\"getting MAL data\");\n      try {\n        const malData = await fetch('/api/mal', {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json',\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify({\n            Username: entry\n          })\n        }).then(res => res.json());\n        if (malData == false) {\n          console.log(\"private\");\n        } else {\n          // instead of array we're turning the list into a comma separated string\n          // let temp = [];\n          // for (let i in malData.data) {\n          // \ttemp[i] = malData.data[i].node.id;\n          // }\n          let str = \"(\";\n          for (let i in malData.data) {\n            str += malData.data[i].node.id + \",\";\n          }\n          str = str.slice(0, str.length - 1) + \")\";\n          console.log(str);\n          setMyList(str);\n          if (str.length > 0) {\n            setUser(entry);\n            setCookies('acc', user, {\n              path: '/'\n            });\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  // const setDBList = async() => {\n  // \tif (myList.length > 0) {\n  // \t\tconst myListString = await fetch('/api/list', {\n  // \t\t\tmethod: 'POST',\n  // \t\t\theaders: {\n  // \t\t\t'content-type': 'application/json',\n  // \t\t\t'Accept': 'application/json'\n  // \t\t\t},\n  // \t\t\tbody: JSON.stringify({\n  // \t\t\t\tids: myList\n  // \t\t\t})\n  // \t\t})\n  // \t}\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userSearchArea\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"userSearch\",\n        type: \"text\",\n        placeholder: \"MAL Username\",\n        value: entry,\n        onChange: e => setEntry(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"userSearchButton\",\n        onClick: () => getMALData(),\n        children: \"Filter by User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"filterLabel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          id: \"filter\",\n          children: [\"Filtered by \", user.length > 0 ? user : \"All Anime\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 6\n        }, this), user != \"\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"unfilter\",\n          onClick: removeFilter,\n          children: \"Remove Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      username: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            user: user,\n            myList: myList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Anime/:id?/:title?\",\n          element: /*#__PURE__*/_jsxDEV(Show, {\n            user: user,\n            myList: myList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Actor/:id?\",\n          element: /*#__PURE__*/_jsxDEV(Actor, {\n            user: user,\n            myList: myList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 3\n  }, this);\n  function removeFilter() {\n    setUser(\"\");\n    setMyList([]);\n    setEntry(\"\");\n  }\n}\n_s(App, \"ChXboEZX/nr2XSZoDq7eok07f+k=\", false, function () {\n  return [useCookies];\n});\n_c = App;\nexport default App;\n\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Show","Home","Actor","Route","Routes","useCookies","useState","useEffect","useCallback","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","cookies","setCookies","entry","setEntry","acc","myList","setMyList","user","setUser","getMALData","console","log","malData","fetch","method","headers","body","JSON","stringify","Username","then","res","json","str","i","data","node","id","slice","length","path","error","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","removeFilter","username","element","_c","$RefreshReg$"],"sources":["C:/Users/aphen/OneDrive/Documents/GitHub/react-voice-actors/frontend/src/App.js"],"sourcesContent":["import Navbar from \"./components/Navbar\";\r\nimport Show from \"./pages/Show\";\r\nimport Home from \"./pages/Home\";\r\nimport Actor from \"./pages/Actor\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\n\r\n\r\nfunction App() {\r\n\tconst [cookies, setCookies] = useCookies([\"acc\"])\r\n\tconst [entry, setEntry]  \t= useState(cookies.acc || \"\");\r\n\tconst [myList, setMyList] \t= useState([]);\r\n  \tconst [user, setUser]     \t= useState(cookies.acc || \"\");\r\n\t\r\n\r\n\t// useEffect(() => {\r\n\t// \tsetDBList();\r\n\t// }, [myList])\r\n\r\n\tuseEffect(() => {\r\n\t\tgetMALData()\r\n\t}, [])\r\n\r\n\r\n\tconst getMALData = async() => {\r\n\t\tif (entry != \"\") {\r\n\t\t\tconsole.log(\"getting MAL data\")\r\n\t\t\ttry {\r\n\t\t\t\tconst malData = await fetch ('/api/mal', {\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'content-type': 'application/json',\r\n\t\t\t\t\t\t'Accept': 'application/json'\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tUsername: entry\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t.then(res => res.json());\r\n\t\t\t\tif (malData == false) {\r\n\t\t\t\t\tconsole.log(\"private\")\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t// instead of array we're turning the list into a comma separated string\r\n\t\t\t\t\t// let temp = [];\r\n\t\t\t\t\t// for (let i in malData.data) {\r\n\t\t\t\t\t// \ttemp[i] = malData.data[i].node.id;\r\n\t\t\t\t\t// }\r\n\t\t\t\t\tlet str = \"(\"\r\n\t\t\t\t\tfor (let i in malData.data) {\r\n\t\t\t\t\t\tstr += malData.data[i].node.id + \",\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstr = str.slice(0, str.length - 1) + \")\"\r\n\t\t\t\t\tconsole.log(str)\r\n\t\t\t\t\tsetMyList(str)\r\n\t\t\t\t\tif (str.length > 0) {\r\n\t\t\t\t\t\tsetUser(entry)\r\n\t\t\t\t\t\tsetCookies('acc', user, {path: '/'})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// const setDBList = async() => {\r\n\t// \tif (myList.length > 0) {\r\n\t// \t\tconst myListString = await fetch('/api/list', {\r\n\t// \t\t\tmethod: 'POST',\r\n\t// \t\t\theaders: {\r\n\t// \t\t\t'content-type': 'application/json',\r\n\t// \t\t\t'Accept': 'application/json'\r\n\t// \t\t\t},\r\n\t// \t\t\tbody: JSON.stringify({\r\n\t// \t\t\t\tids: myList\r\n\t// \t\t\t})\r\n\t// \t\t})\r\n\t// \t}\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t{/* <h6>{cookies.acc}</h6> */}\r\n\t\t\t<div className=\"userSearchArea\">\r\n\t\t\t\t\t<input id=\"userSearch\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"MAL Username\" \r\n\t\t\t\t\t\tvalue={entry} \r\n\t\t\t\t\t\tonChange={(e) => setEntry(e.target.value)}></input>\r\n\t\t\t\t\t<button id=\"userSearchButton\" onClick={() => getMALData()}>Filter by User</button>\r\n\t\t\t\t<div id='filterLabel'>\r\n\t\t\t\t\t<h6 id='filter'>Filtered by {user.length > 0 ? user : \"All Anime\"}</h6>\r\n\t\t\t\t\t{user != \"\"\r\n\t\t\t\t\t\t? <button id='unfilter' onClick={removeFilter}>Remove Filter</button>\r\n\t\t\t\t\t\t: <></>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Navbar username={user}/>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t<Routes>\r\n\t\t\t\t<Route path=\"/\" element={<Home user={user} myList={myList}/>} />\r\n\t\t\t\t<Route path=\"/Anime/:id?/:title?\" element={<Show user={user} myList={myList}/>} />\r\n\t\t\t\t<Route path=\"/Actor/:id?\" element={<Actor user={user} myList={myList}/>} />\r\n\t\t\t</Routes>\r\n\t\t\t</div>\r\n\t\t\t{/* <button onClick={getData}>Click</button> */}\r\n\t\t</div>\r\n\t\r\n\t);\r\n\r\n\tfunction removeFilter() {\r\n\t\tsetUser(\"\")\r\n\t\tsetMyList([])\r\n\t\tsetEntry(\"\")\r\n\t}\r\n}\r\nexport default App\r\n\r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n\r\n\r\n// }\r\n\r\n// export default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}